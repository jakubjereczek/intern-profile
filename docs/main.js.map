{"version":3,"sources":["./src/app/pages/main/main.component.ts","./src/app/pages/main/main.component.html","./src/app/components/menu/menu.component.ts","./src/app/components/menu/menu.component.html","./src/environments/environment.ts","./src/app/pages/main/why-me/why-me.component.html","./src/app/pages/main/why-me/why-me.component.ts","./src/app/pages/main/about-me/about-me.component.ts","./src/app/pages/main/about-me/about-me.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/main/projects/projects.component.ts","./src/app/pages/main/projects/projects.component.html","./src/app/app.module.ts","./src/app/models/data-base.ts","./src/app/services/github-http.service.ts","./src/app/pages/main/contact/contact.component.ts","./src/app/pages/main/contact/contact.component.html","./src/app/app-routing.module.ts","./src/app/pages/project/project.component.ts","./src/app/pages/project/project.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-menu></app-menu>\r\n<app-about-me></app-about-me>\r\n<app-projects></app-projects>\r\n<app-why-me></app-why-me>\r\n<app-contact></app-contact>\r\n<footer>Jakub Jereczek © maj 2021</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  isMenuOpen: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleMenu() {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  scrollIntoView(id: string) {\n    this.toggleMenu();\n\n    const element = document.querySelector(id);\n    const headerOffset = 55;\n    const elementPosition = element.getBoundingClientRect().top;\n    const offsetPosition = elementPosition - headerOffset;\n\n    console.log(offsetPosition)\n    window.scrollTo({\n      top: window.scrollY + offsetPosition,\n      behavior: \"smooth\"\n    });\n  }\n\n}\n","<div id=\"menu_bar\" [ngClass]=\"{'open' : isMenuOpen}\">\n    <div class=\"hamburger\" [ngClass]=\"{'open' : isMenuOpen}\" (click)=\"toggleMenu()\">\n        <div class=\"hamburger__line\"></div>\n    </div>\n</div>\n\n<div class=\"menu_wrapper\" [ngClass]=\"{'active' : isMenuOpen}\">\n    <div class=\"menu_content\">\n        <ul>\n            <li (click)=\"scrollIntoView('#aboutme')\">O mnie</li>\n            <li (click)=\"scrollIntoView('#projects')\">Projekty</li>\n            <li (click)=\"scrollIntoView('#whyme')\">Dlaczego ja?</li>\n            <li (click)=\"scrollIntoView('#contact')\">Kontakt</li>\n        </ul>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<p class=\"section-title\" id=\"whyme\">#whyme</p>\n<div id=\"single-section-page\">\n    <div id=\"section-content\">\n        <div class=\"section\">\n            <h2 class=\"h2-title\">Dlaczego <span>warto</span> na mnie postawić?</h2>\n            <h2>Cześć<span>.</span></h2>\n            <h3>Tutaj chciałbym przedstawić swoją sylwetkę szczegółowo.</h3>\n            <p class=\"p-describe\">\n                Zaczynajac od początku. Jestem studentem drugiego roku Informatyki i Ekonometrii.\n                Większość swojego wolnego czasu w trakcie studiów poswięcam na szlifowanie\n                umiejetności oraz samorozwój w obszarze programowania (głównie aplikacji webowych). Jestem osobą\n                zoorganizowana, odpowiedzialną oraz pracownitą. Praca z nowymi technologami motywuję mnie, a nie\n                odstrasza. Moim głównym atutem jest dobra znajomość JavaScript (React.js, Angular, Node.js,\n                Express.js).\n                Rozwijam się w kontekście programowania\n                aplikacji internetowych (front oraz backend). Staż umożliwi mi zdobycie komercyjnego doświadczenia w\n                dziedzinie programowania. Projekty, które zaprezentowałem wyżej są napisane w różnych technologiach\n                co\n                pokazuje moją zdolność do uczenia się nowych rzeczy. Myśle, że byłbym wartościowym pracownikiem, a w\n                przypadku dostania się współpraca nie skończyła by się na stażu a na pełnoprawnej pracy po jego\n                ukończeniu.\n            </p>\n        </div>\n        <div class=\"section\">\n            <h2 class=\"h2-title\">Technologie / Języki programowania w ktorych pracuję</h2>\n            <p class=\"p-describe text-center\">\n                <span class=\"technology-icon\" *ngFor=\"let technology of technologies\">\n                    <p>\n                        {{technology.name}}\n                    </p>\n                </span>\n            </p>\n        </div>\n    </div>\n    <div class=\"background_photo2\" [ngStyle]=\"{'background-image': 'url(assets/images/background_photo2.png)'}\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-why-me',\n  templateUrl: './why-me.component.html',\n  styleUrls: ['./why-me.component.scss']\n})\nexport class WhyMeComponent implements OnInit {\n\n  technologies = [\n    {\n      name: \"HTML5\"\n    },\n    {\n      name: \"CSS3\"\n    },\n    {\n      name: \"JavaScript\"\n    },\n    {\n      name: \"React\"\n    },\n    {\n      name: \"Angular\"\n    },\n    {\n      name: \"TypeScript\"\n    },\n    {\n      name: \"Node.js\"\n    },\n    {\n      name: \"Express.js\"\n    },\n    {\n      name: \"MongoDB\"\n    }\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-about-me',\n  templateUrl: './about-me.component.html',\n  styleUrls: ['./about-me.component.scss']\n})\nexport class AboutMeComponent implements OnInit {\n\n  descriptions: string[] = [\n    \"Miło, że tutaj jesteś:)\",\n    \"Przygodę z programowaniem webowym rozpocząłem prawie półtorej roku temu.\",\n    \"Każdą wolną chwile od tego czasu poświęcam na rozwijanie umięjętności, a programowanie sprawia mi niezwykła przyjemność.\",\n    \"Poniżej przedstawie Ci projekty, które wyróżniłem w swoim portfolio\",\n    \"Poszukuję pracy jako Frontend Developer bądz JavaScript developer\"\n  ]\n  textIndex: number;\n  letterIndex: number;\n  text: string = \"\"\n\n  isCursorHidden = false;\n\n  constructor() {\n    this.textIndex = 0;\n    this.letterIndex = 0;\n  }\n\n  ngOnInit(): void {\n    this.changeLetters();\n    this.changeCursorVisibility();\n  }\n\n  changeLetters() {\n    if (this.textIndex < this.descriptions.length) {\n      if (this.letterIndex === this.descriptions[this.textIndex].length) {\n        this.letterIndex = 0;\n        this.textIndex++;\n        setTimeout(() => {\n          this.text = \" \"\n          this.changeLetters();\n        }, 2000)\n        return;\n      }\n      this.text += this.descriptions[this.textIndex][this.letterIndex];\n      this.letterIndex++;\n    } else {\n      this.textIndex = 0;\n    }\n    setTimeout(() => this.changeLetters(), 100);\n  }\n\n  changeCursorVisibility() {\n    this.isCursorHidden = !this.isCursorHidden;\n    setTimeout(() => this.changeCursorVisibility(), 400);\n  }\n\n\n}\n","<p class=\"section-title\" id=\"aboutme\">#aboutme</p>\n<div id=\"single-section-page\">\n    <div id=\"section-content\">\n        <div>\n            <div class=\"image-profile-container\">\n                <div class=\"image-profile\" [ngStyle]=\"{'background-image': 'url(assets/images/profile.png)'}\"></div>\n            </div>\n            <h2>Cześć, jestem <span>Kuba</span>. 👋</h2>\n            <h3>Intern/Junior Frontend developer</h3>\n\n        </div>\n        <p class=\"description\">{{text}}<span class=\"cursor\" [style.opacity]=\"isCursorHidden ? 1 : 0.05\">|</span></p>\n    </div>\n    <div class=\"background_photo1\" [ngStyle]=\"{'background-image': 'url(assets/images/background_photo1.png)'}\"></div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'intern-profile';\n}\n","<div id=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PROJECTS } from 'src/app/models/data-base';\nimport { Project } from 'src/app/models/project';\nimport { Repo } from 'src/app/models/repo';\nimport { GithubHttpService } from 'src/app/services/github-http.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n\n  projects: Project[] = PROJECTS;\n  githubRepos$: Observable<Repo[]>;\n\n  isMessageAlertVisible = false;\n\n  @ViewChild('projectsSection')\n  projectsSection!: ElementRef;\n\n  constructor(router: Router, private githubHttp: GithubHttpService) {\n    // Wykorzystane w przypadku wyjścia z widoku projektu. \n    // Wrocimy do sekcji #projects.\n    router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        const tree = router.parseUrl(router.url);\n        if (tree.fragment) {\n          const element = document.querySelector(\"#\" + tree.fragment);\n          if (element) {\n            element.scrollIntoView(true);\n          }\n        }\n      }\n    });\n\n  }\n\n  ngOnInit(): void {\n    this.getRepos();\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onWindowScroll() {\n    const scrollWidth = window.pageYOffset\n    const projectSectionWidth = this.projectsSection.nativeElement.offsetTop\n\n    console.log(scrollWidth, projectSectionWidth)\n    if (scrollWidth > projectSectionWidth - 250) {\n      // console.log(\"yes\")\n\n      return this.isMessageAlertVisible = true;\n    }\n    console.log(\"mot\")\n\n    return this.isMessageAlertVisible = false;\n  }\n\n  getRepos() {\n    this.githubRepos$ = this.githubHttp.getRepos().pipe(\n      map(results => results.sort((a, b) => {\n        return a.created_at > b.created_at ? 1 : a.created_at === b.created_at ? 0 : -1;\n      }))\n    );\n  }\n\n  moveToGithubProject(repo: Repo) {\n    window.location.href = repo.html_url;\n  }\n\n\n\n\n}\n","<div #projectsSection id=\"single-section-page\" style=\"position: relative\">\n    <div id=\"header\"></div>\n\n    <p class=\"section-title\" id=\"projects\"><span>#projects</span></p>\n    <div id=\"section-content\">\n        <h2 class=\"title\">FRONTENDOWE PROJEKTY<span>.</span></h2>\n\n        <div class=\"message-alert-container\">\n            <div class=\"message-alert\" #messageAlert [ngClass]=\"isMessageAlertVisible ? 'enable' : 'disable'\">\n                <p>Najedz na miniaturę projektu aby przejść do szczegółowego okna projektu!</p>\n            </div>\n        </div>\n        <div class=\"project-container\" *ngFor=\"let project of projects\">\n            <div class=\"project-content\" [ngStyle]=\"{'background-image': 'url(' + project.image + ')'}\">\n                <h2 class=\"project-title\">{{project.name}}</h2>\n                <div class=\"project-shadow-effect\">\n                    <p>Wyswietl więcej</p>\n                    <div class=\"link\" [ngStyle]=\"{'background-image': 'url(assets/images/link.png)'}\"\n                        [routerLink]=\"['/project', project.id]\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"github-links\">\n\n            <h2 class=\"title\">WSZYSTKIE PROJEKTY WZGLĘDEM DATY UTWORZENIA<span>.</span>\n            </h2>\n            <div class=\"github-repo\" *ngFor=\"let repo of githubRepos$ | async\">\n                <div class=\"github-repo-icon\" [ngStyle]=\"{'background-image': 'url(assets/images/github.png)'}\">\n                </div>\n                <div class=\"github-repo-content\" (click)=\"moveToGithubProject(repo)\">\n                    <div class=\"github-repo-content-title\">\n                        <span class=\"repo-title\">{{repo.name}}\n                        </span><span class=\"repo-date\">({{repo.created_at | date: 'mediumDate'}})</span>\n                    </div>\n                    <div class=\"github-repo-content-subtitle\"> {{repo.description}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { MainComponent } from './pages/main/main.component';\r\nimport { AboutMeComponent } from './pages/main/about-me/about-me.component';\r\nimport { ProjectsComponent } from './pages/main/projects/projects.component';\r\nimport { WhyMeComponent } from './pages/main/why-me/why-me.component';\r\nimport { ProjectComponent } from './pages/project/project.component';\r\n\r\nimport localePl from \"@angular/common/locales/pl\";\r\nimport { registerLocaleData } from '@angular/common';\r\n\r\nimport { LightboxModule } from 'ngx-lightbox';\nimport { ContactComponent } from './pages/main/contact/contact.component';\r\n\r\n\r\nregisterLocaleData(localePl);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MenuComponent,\r\n    MainComponent,\r\n    AboutMeComponent,\r\n    ProjectsComponent,\r\n    WhyMeComponent,\r\n    ProjectComponent,\r\n    ContactComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    LightboxModule\r\n  ],\r\n  providers: [{ provide: LOCALE_ID, useValue: \"pl-PL\" }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Project } from './project';\r\n\r\nexport const PROJECTS: Project[] = [\r\n    {\r\n        id: 1,\r\n        name: \"Day planner\",\r\n        image: 'assets/images/projects/dayplanner.png',\r\n        images: [{ link: 'assets/images/screenshots/dayplanner1.png', caption: \"Widok logowania\" }, { link: 'assets/images/screenshots/dayplanner2.png', caption: \"Widok rejestracji\" }, { link: 'assets/images/screenshots/dayplanner3.png', caption: \"Widok zmiany hasła\" }, { link: 'assets/images/screenshots/dayplanner4.png', caption: \"Widok profilu po zalogowaniu\" }, { link: 'assets/images/screenshots/dayplanner5.png', caption: \"Szczegolowa informacja o dodanym elemencie\" }, { link: 'assets/images/screenshots/dayplanner6.png', caption: \"Lista elementow - podział\" }, { link: 'assets/images/screenshots/dayplanner7.png', caption: \"Tryb nocny!\" }],\r\n        description: \"Aplikacja frontendowa korzystajaca z API Firebase Google autoryzacji. Dane zapisywane są w localStorage i ładowane za pomocą Reduxa (Aplikacja początkowo miałabyć tylko treningiem Reacta dopiero z czasem rozszerzyłem je o funkcjonalność autoryzacji, a miejsca przechowywania danych już nie zmieniałem). W czasie budowania tego projektu chciałem skupić się na frontendowym aspekcie budowania aplikacji internetowych. Aplikacja zaimplementowana ma wszystkie widoki związane z autoryzacja (logowanie, przypomnij hasło, rejestracja, zmień dane). Aplikacja pozwala na zapisywanie dniowych 24-godzinnych celów – po ukływie tego czasu zmieniają one kolor w aplikacji oraz są przeniesione do sekcji wygaśnietych. Aplikacja umożliwia wyświetlenie pojedyńczego zadania oraz usunięcie go. \",\r\n        technologies: [\"JavaScript\", \"HTML\", \"CSS\"],\r\n        demo: 'https://jakubjereczek.github.io/react-redux-dayplanner/',\r\n        github: 'https://github.com/jakubjereczek/react-redux-dayplanner'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Save place on map\",\r\n        image: 'assets/images/projects/saveplaceonmap.png',\r\n        images: [{ link: 'assets/images/screenshots/saveplaceonmap1.png', caption: \"Widok dodanej lokalizacji\" }, { link: 'assets/images/screenshots/saveplaceonmap2.png', caption: \"Lista dodanych lokalizacji\" }, { link: 'assets/images/screenshots/saveplaceonmap3.png', caption: \"Logo aplikacji\" }],\r\n        description: \"Aplikacja napisana w środowisku Android Studio, której głównym celem jest zapisywanie punktów (markerów) na mapie względem kategorii. Każda z kategorii reprezenuję inną ikonę na mapie. Panel głównym aplikacji daję nam dwie opcje – przejścia do mapy oraz przejścia do listy zapisanych lokalizacji. W przypadku wybrania mapy zostanie odpalona mapa w lokalizacji jakiej znajduję się nasz telefon oraz zostana załadowane wszystkie dotychas dodane markery. Po naciśnięciu na dany marker wyświetli się informacja o nazwie, opisie i kategorii oraz możliwośc usunięcia. Dane punktu przechowywane są na lokalnej pamieci telefonu. Dodanie nowego markera odbywa się za pomocą dłuższego przytrzymania ekranu. A lista dodanych lokalizacji – wraz z odnosnikiem do nich znajduję się menu głównym. Aplikacja jest dwujęzyczna – (język polski oraz angielski).\",\r\n        technologies: [\"Java\", \"biblioteka Osmdroid\"],\r\n        demo: 'https://play.google.com/store/apps/details?id=pl.edu.ug.saveplaceonmap',\r\n        github: 'https://github.com/jakubjereczek/android-app-saveplaceonmap'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Chat app\",\r\n        image: 'assets/images/projects/chatapp.png',\r\n        images: [{ link: 'assets/images/screenshots/chatapp1.png', caption: \"Widok startowy\" }, { link: 'assets/images/screenshots/chatapp2.png', caption: \"Widok listy dostepnych pokojow\" }, { link: 'assets/images/screenshots/chatapp3.png', caption: \"Popup dodawania pokoju\" }, { link: 'assets/images/screenshots/chatapp4.png', caption: \"Popup przy wejsciu do pokoju z haslem\" }, { link: 'assets/images/screenshots/chatapp5.png', caption: \"Widok pokoju chatu\" }, { link: 'assets/images/screenshots/chatapp6.png', caption: \"Widok pokoju chatu\" }, { link: 'assets/images/screenshots/chatapp7.png', caption: \"Popup dodawania pokoju - mobilny\" }],\r\n        description: \"Fullstackowa aplikacja grupowego chatu. Jest to moja największa aplikacja. Pełnoprawny system krótkoterminowych pokojów chatu. Użytkownik gdy dołączy do aplikacji istnieje do momentu wyjścia z karty przerglądraki. Aplikacja umożliwia tworzenie pokojów prywatnych (chronionych hasłem) oraz publicznych. Wiadomości oraz komunikaty o między innymi ilości dostępnych użytkowników są wysyłane w czasie rzeczywistym dzięki użyciu Socket.io. Gdy użytkownik utworzy pokój chatu jest on aktywny do momentu gdy jest w nim przynajmniej jeden uzytnikownik. Zaimplementowałem emotikony, powiadomienia o tym, ze użytkownik piszę oraz historie wpisów, które pojawiły przed dołączeniem użytkownika.\",\r\n        technologies: [\"JavaScript\", \"ReactJS oraz liczne dependencies\", \"Socket.io\", \"Node.js\", \"Express.js\"],\r\n        demo: 'https://socketio-chat-app-client.herokuapp.com/',\r\n        github: 'https://github.com/jakubjereczek/socket.io-chat-app'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Snake\",\r\n        image: 'assets/images/projects/snake.png',\r\n        images: [{ link: 'assets/images/screenshots/snake1.png', caption: \"Menu aplikacji - wybór gry z uzyciem klawiatury lub dotyku (mobilny)\" }, { link: 'assets/images/screenshots/snake2.png', caption: \"Przedstawienie gry\" }],\r\n        description: \"Jest to mój najstarszy projekt. Myśle, że warto go pokazać dlatego, że logika została napisana całkowicie w czystym JS. Snake napisany stosujac się do podejścia OPP. Zaimplementowałem wersję na telefony, które responsywnie dostosowuje szerokość oraz wysokość do ekranu telefonu. W moim Snaku zaimplementowałem funkcje algorytmu liczącego detekcje kolizji oraz zaniechania generowania punktów na zajętych pozycjach przez postać. Dodatkowo wprowadziłem „supermoce” – które działają na zachowania postaci, typu przyśpieszenie, spowolnienie czy dodatkowe punkty. W przypadku wjechania w ogon, zostaje on „ucięty” a punkty odjęte.\",\r\n        technologies: [\"Czysty JavaScript\", \"HTML\", \"CSS\"],\r\n        demo: 'https://jakubjereczek.github.io/js-snake/',\r\n        github: 'https://github.com/jakubjereczek/js-snake'\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Library Rest API\",\r\n        image: 'assets/images/projects/libraryapi.png',\r\n        images: [{ link: 'assets/images/screenshots/api1.png', caption: \"Schemat API\" }],\r\n        description: \"REST API napisane w Node.js bilioteki. API implemenuje RESTowe metody dla zapytania /books/ oraz /users/. Autor relacyjnie powiązany jest z książkami. W przypadku dodania dla nowej ksiązki nieistniejacego autora tworzymy go w bazie danych. W tablicy Authors w polu books zostaje dodane _id książki a w Books w polu author zastępuje przypisanie _id autora. Jeśli usuniemy książke to automatycznie z tablicy books (Authors) zostaję usunięta ta pozycja. Również jeśli usuniemy autora to wszystkie jego książki zostaną usunięte. Niektóre z metod potrzebują uwierzytelnienia. Pełna dokumentacja znajduję się na Githubie w pliku dokumentacjaPL.docs.\",\r\n        technologies: [\"JavaScript\", \"Node.js\", \"Express.js\", \"jsonwebtoken\", \"mongodb\", \"mongoose\", \"bcrypt\"],\r\n        demo: 'https://github.com/jakubjereczek/express-restapi-library/blob/main/DokumentacjaPL.docx',\r\n        github: 'https://github.com/jakubjereczek/express-restapi-library'\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"jwt tokens auth\",\r\n        image: 'assets/images/projects/reactjwt.png',\r\n        images: [],\r\n        description: \"Project jest w czasie tworzenia. Dotychczasowa praca pozwala na rejestrację oraz logowanie. Celem projektu jest stworzenie własnego systemu rejestracji. Aplikcja pozwala na autoryzacje uzytkownika za pomocą Tokenów (wykorzystuje AccessToken oraz Refresh token). W przyszłości chciałbym zaimplementować wysyłanie maili potwierdzających utworzenie oraz odzyskiwanie konta. W planach jest rownież implementacja przenoszenia tokenów między serwerem a klientem w Cookie only-http (aktualnie robie to w sposob nie zapewniajacy pełnego bezpieczeństwa).\",\r\n        technologies: [\"JavaScript\", \"Node.js\", \"Express.js (bcrypt, body-parser, cors, jsonwebtoken, mongoose)\", \"mongoDB\", \"ReactJS\"],\r\n        demo: null,\r\n        github: 'https://github.com/jakubjereczek/react-jwt-auth'\r\n    },\r\n]","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Repo } from '../models/repo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubHttpService {\n\n  private URL = \"https://api.github.com/users/jakubjereczek/repos\"\n\n  constructor(private http: HttpClient) { }\n\n  getRepos(): Observable<Repo[]> {\n    console.log(\"Repos\")\n    return this.http.get<Repo[]>(this.URL);\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"single-section-page\">\n    <p class=\"section-title\" id=\"contact\">#contact</p>\n\n    <div id=\"section-content\">\n\n        <div class=\"form-section\">\n            <h2 style=\"text-align: center;\">NAPISZ DO MNIE<span>.</span></h2>\n            <form>\n                <label for=\"name\">Imię: </label>\n                <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Kim jesteś?\">\n                <label for=\"email\">Email: </label>\n                <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"Jak sie do Ciebie odezwać?\">\n                <label for=\"message\">Wiadomość: </label>\n                <textarea id=\"message\" name=\"message\" placeholder=\"Może tutaj zamieścisz oferte pracy?:)\"></textarea>\n                <button type=\"submit\">Wyślij</button>\n            </form>\n        </div>\n\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainComponent } from './pages/main/main.component';\nimport { ProjectComponent } from './pages/project/project.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/main', pathMatch: 'full' },\n  { path: 'main', component: MainComponent },\n  { path: 'project/:id', component: ProjectComponent },\n  { path: '**', component: MainComponent } // not found\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Project } from 'src/app/models/project';\nimport { switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { PROJECTS } from 'src/app/models/data-base';\nimport { Lightbox } from 'ngx-lightbox';\n\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit {\n\n  projectDetails: Observable<Project>;\n  _album = [];\n  loading: boolean = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private location: Location,\n    private router: Router,\n    private _lightbox: Lightbox) {\n  }\n\n\n  ngOnInit(): void {\n    // Pobieranie danych z listy na podstawie przekazanego ID.\n    this.projectDetails = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => PROJECTS.filter(project => project.id === Number(params.get('id'))))\n    )\n    this.initGallery();\n    setTimeout(() => {\n      this.loading = false;\n    }, 0);\n  }\n\n  initGallery() {\n    // Inizjalizaja galerii.\n    this.projectDetails.subscribe((movie) => {\n      const images = movie.images;\n\n      for (let i = 0; i < images.length; i++) {\n        const src = images[i].link;\n        const caption = images[i].caption;\n        const thumb = images[i].link;\n\n        const album = {\n          src: src,\n          caption: caption,\n          thumb: thumb\n        };\n        this._album.push(album);\n      }\n    });\n  }\n\n  open(index: number): void {\n    // open lightbox\n\n    this._lightbox.open(this._album, index);\n  }\n\n  close(): void {\n    // close lightbox programmatically\n    this._lightbox.close();\n  }\n\n  back() {\n    // this.location.back();\n    this.router.navigate(['main']\n      // ,\n      //  { fragment: 'projects' }\n    );\n    // TODO:  Poprawić!\n  }\n\n  moveToProject(project: Project, type: string) {\n    let url = null;\n    switch (type) {\n      case 'github':\n        url = project.github;\n        break;\n      case 'demo':\n        url = project.demo;\n        break;\n    }\n    window.open(url, \"_blank\");\n  }\n\n}\n","<div id=\"single-section-page\">\n    <div id=\"section-content\" [ngClass]=\"{'open' : !loading}\">\n        <div id=\"project-container-bg\">\n            <div id=\"project-container\" *ngIf=\"projectDetails | async as project\">\n                <button (click)=\"back()\"></button>\n                <div class=\"links buttons\">\n                    <ng-container *ngIf=\"project.github\">\n                        <div class=\"github btn\" [ngStyle]=\"{'background-image': 'url(assets/images/github2.png)'}\"\n                            (click)=\"moveToProject(project, 'github')\"></div>\n                    </ng-container>\n                    <ng-container *ngIf=\"project.demo\">\n                        <div class=\"demo btn\" [ngStyle]=\"{'background-image': 'url(assets/images/link.png)'}\"\n                            (click)=\"moveToProject(project, 'demo')\"></div>\n                    </ng-container>\n                </div>\n                <div id=\"project-images\" [ngClass]=\"{'open' : !loading}\">\n                    <div class=\"project-images-content\" [ngClass]=\"{'open' : !loading}\">\n                        <img *ngFor=\"let image of _album; let i=index\" [src]=\"image.thumb\" (click)=\"open(i)\" />\n                    </div>\n                </div>\n                <div id=\"project-content-container\">\n                    <div id=\"project-content\" [ngClass]=\"{'open' : !loading}\">\n                        <h2 class=\"project-content-title\">{{project.name}}</h2>\n                        <p class=\"project-content-technologies\">Zastosowane technologie:\n                            <span>{{project.technologies.join(\", \")}}</span></p>\n                        <p class=\"project-content-description\">{{project.description}}</p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}